- name: Install Unbound and OpenSSL
  apt:
    name:
      - unbound
      - openssl
      - dnsutils
    state: present
    update_cache: yes

- name: Stop Unbound before configuration
  service:
    name: unbound
    state: stopped
  ignore_errors: yes

- name: Create TLS certificate directory
  file:
    path: /etc/unbound/tls
    state: directory
    mode: '0755'
    owner: root
    group: unbound

- name: Generate self-signed TLS certificate for Unbound
  shell: |
    openssl req -x509 -newkey rsa:2048 -nodes \
      -keyout /etc/unbound/tls/unbound.key \
      -out /etc/unbound/tls/unbound.crt \
      -days 365 -subj "/CN=resolver.local"
  args:
    creates: /etc/unbound/tls/unbound.crt

- name: Set correct permissions for TLS files
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { path: "/etc/unbound/tls/unbound.key", owner: "root", group: "unbound", mode: "0640" }
    - { path: "/etc/unbound/tls/unbound.crt", owner: "root", group: "unbound", mode: "0644" }

- name: Create extended AppArmor override for Unbound
  copy:
    dest: /etc/apparmor.d/local/usr.sbin.unbound
    content: |
      # Allow access to the TLS directory and its files
      /etc/unbound/tls/ r,
      /etc/unbound/tls/** r,
      # Allow access to OpenSSL libraries
      /usr/lib/x86_64-linux-gnu/openssl-*/ r,
      /usr/lib/x86_64-linux-gnu/openssl-*/** r,
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Reload AppArmor
  command: apparmor_parser -r /etc/apparmor.d/usr.sbin.unbound
  ignore_errors: yes

- name: Backup original Unbound configuration
  copy:
    src: /etc/unbound/unbound.conf
    dest: /etc/unbound/unbound.conf.backup
    remote_src: yes
  ignore_errors: yes

- name: Create systemd override directory
  file:
    path: /etc/systemd/system/unbound.service.d
    state: directory
    mode: '0755'

- name: Configure extended systemd override for Unbound
  copy:
    dest: /etc/systemd/system/unbound.service.d/override.conf
    content: |
      [Service]
      # Extended permissions for group switching
      CapabilityBoundingSet=CAP_NET_BIND_SERVICE CAP_SETGID CAP_SETUID CAP_DAC_READ_SEARCH
      AmbientCapabilities=CAP_NET_BIND_SERVICE CAP_SETGID CAP_SETUID
      
      # Loosen security restrictions for functionality
      NoNewPrivileges=false
      PrivateTmp=false
      
      # Explicit user and group configuration
      User=unbound
      Group=unbound
    mode: '0644'

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

- name: Write Unbound configuration (without internal username directive)
  copy:
    dest: /etc/unbound/unbound.conf
    content: |
      server:
          verbosity: 1
          interface: 0.0.0.0
          port: 53

          log-queries: yes
          log-replies: yes
          
          # TLS configuration
          tls-port: 853
          interface: 0.0.0.0@853
          tls-service-key: "/etc/unbound/tls/unbound.key"
          tls-service-pem: "/etc/unbound/tls/unbound.crt"
          
          # Security settings
          access-control: 0.0.0.0/0 allow
          hide-identity: yes
          hide-version: yes
          
          # Cache settings
          cache-min-ttl: 3600
          cache-max-ttl: 86400
          
          # REMOVED: username directive - systemd manages user

          do-tcp: yes
          do-udp: yes
          do-ip4: yes
          do-ip6: no

          hide-identity: yes
          hide-version: yes
          cache-min-ttl: 3600
          cache-max-ttl: 86400
          
      forward-zone:
          name: "."
          forward-addr: 1.1.1.1@853
          forward-addr: 1.0.0.1@853
          forward-ssl-upstream: yes
    owner: root
    group: root
    mode: '0644'

- name: Test Unbound configuration
  command: unbound-checkconf /etc/unbound/unbound.conf
  register: unbound_config_test
  failed_when: unbound_config_test.rc != 0

- name: Debug show file permissions
  command: ls -la /etc/unbound/tls/
  register: tls_permissions
  
- name: Show TLS file permissions
  debug:
    msg: "{{ tls_permissions.stdout_lines }}"

- name: Check unbound user and group
  command: id unbound
  register: unbound_user_info
  ignore_errors: yes

- name: Show user information
  debug:
    msg: "Unbound user info: {{ unbound_user_info.stdout if unbound_user_info.rc == 0 else 'User not found' }}"

- name: Start Unbound with enhanced error handling
  service:
    name: unbound
    state: started
    enabled: yes
  register: unbound_start
  ignore_errors: yes

- name: Show detailed error message if startup fails
  command: journalctl -u unbound.service -n 20 --no-pager
  register: unbound_logs
  when: unbound_start.failed

- name: Debug Unbound logs if errors occur
  debug:
    msg: "{{ unbound_logs.stdout_lines }}"
  when: unbound_start.failed

- name: Fallback - Test manual configuration
  command: sudo -u unbound unbound-checkconf /etc/unbound/unbound.conf
  register: manual_config_test
  ignore_errors: yes
  when: unbound_start.failed

- name: Show manual configuration test results
  debug:
    msg: "Manual config test: {{ manual_config_test.stdout if manual_config_test.rc == 0 else manual_config_test.stderr }}"
  when: unbound_start.failed

- name: Fallback - Alternative systemd configuration (root mode)
  copy:
    dest: /etc/systemd/system/unbound.service.d/root-fallback.conf
    content: |
      [Service]
      # Fallback: run as root (less secure but functional)
      User=root
      Group=root
      CapabilityBoundingSet=CAP_NET_BIND_SERVICE
      AmbientCapabilities=CAP_NET_BIND_SERVICE
    mode: '0644'
  when: unbound_start.failed
  
- name: Reload systemd daemon (Fallback)
  systemd:
    daemon_reload: yes
  when: unbound_start.failed

- name: Set TLS file permissions for root access (Fallback)
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { path: "/etc/unbound/tls/unbound.key", owner: "root", group: "root", mode: "0600" }
    - { path: "/etc/unbound/tls/unbound.crt", owner: "root", group: "root", mode: "0644" }
  when: unbound_start.failed

- name: Restart Unbound again (Fallback)
  service:
    name: unbound
    state: restarted
    enabled: yes
  when: unbound_start.failed

- name: Wait for Unbound to start
  wait_for:
    port: 53
    host: 127.0.0.1
    timeout: 30

- name: Test DNS resolution
  command: dig @127.0.0.1 google.com
  register: dns_test
  failed_when: "'ANSWER SECTION' not in dns_test.stdout"

- name: Test DNS-over-TLS (if port 853 available)
  command: dig @127.0.0.1 -p 853 +tls google.com
  register: dot_test
  ignore_errors: yes

- name: Show DNS-over-TLS test result
  debug:
    msg: "DNS-over-TLS Test: {{ 'Successful' if dot_test.rc == 0 else 'Failed' }}"

- name: Show final service status
  command: systemctl status unbound.service
  register: final_status
  ignore_errors: yes

- name: Debug final service information
  debug:
    msg: "{{ final_status.stdout_lines }}"
